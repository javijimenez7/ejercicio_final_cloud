server.port = 8090
secretKey= mySecretKey
spring.application.name = backEmpresa
admin.email = administrador@administrador.com

#CONFIGURACION PARA SPRING MAIL
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

##CONFIGURACION PARA BASE DE DATOS H2 (hay que pasar por enviroment el nombre de la DB)
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#hibernate.dialect=org.hibernate.dialect.HSQLDialect
#spring.jpa.hibernate.ddl-auto=update

spring.datasource.url=jdbc:mysql://db2:3306/backempresa
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.ddl-auto=create-drop

#CONFIGURACION PARA KAFKA
topic=bus
group=${server.port}
message.group.name=groupId2
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=busManager
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

#CONFIGURACION PARA EUREKA
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
